"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[6597],{17741:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>R,contentTitle:()=>b,default:()=>S,frontMatter:()=>f,metadata:()=>M,toc:()=>g});var a=n(83117),i=n(67294),o=n(3905),r=n(67177),d=n(28033),s=n(10758),l=n(21739),u=n(35842),c=n(347),m=n(6328),p=n(49638);const v={code:"function anonymous(){const{reduceMotion,sv}=this.__closure;return{transform:[{translateX:reduceMotion?0:sv.value}]};}"};function h(){const e=(0,s.y)(-200),t=(0,l.J)(),n=(0,u.l)(function(){const n=()=>({transform:[{translateX:t?0:e.value}]});return n.__closure={reduceMotion:t,sv:e},n.__initData=v,n.__workletHash=8897056240564,n}());return i.useEffect((()=>{e.value=(0,c.D)((0,m.j)(200,{duration:2e3}),-1,!0)})),i.createElement(r.Z,{style:k.container},i.createElement(p.n,{style:[k.box,n]}))}const k=d.Z.create({box:{height:100,width:100,backgroundColor:"#b58df1",borderRadius:20},container:{flex:1,alignItems:"center"}}),y="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useReducedMotion,\n  useSharedValue,\n  withRepeat,\n  withTiming,\n} from 'react-native-reanimated';\n\nexport default function App() {\n  const sv = useSharedValue(-200);\n  // highlight-next-line\n  const reduceMotion = useReducedMotion();\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    // highlight-next-line\n    transform: [{ translateX: reduceMotion ? 0 : sv.value }],\n  }));\n\n  React.useEffect(() => {\n    sv.value = withRepeat(withTiming(200, { duration: 2000 }), -1, true);\n  });\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.box, animatedStyle]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    height: 100,\n    width: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n",f={id:"useReducedMotion",title:"useReducedMotion",sidebar_label:"useReducedMotion"},b=void 0,M={unversionedId:"device/useReducedMotion",id:"device/useReducedMotion",title:"useReducedMotion",description:"useReducedMotion lets you query the reduced motion system setting. You can use it to disable animations.",source:"@site/docs/device/useReducedMotion.mdx",sourceDirName:"device",slug:"/device/useReducedMotion",permalink:"/react-native-reanimated/docs/device/useReducedMotion",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/docs/device/useReducedMotion.mdx",tags:[],version:"current",frontMatter:{id:"useReducedMotion",title:"useReducedMotion",sidebar_label:"useReducedMotion"},sidebar:"tutorialSidebar",previous:{title:"useAnimatedSensor",permalink:"/react-native-reanimated/docs/device/useAnimatedSensor"},next:{title:"Layout Animations",permalink:"/react-native-reanimated/docs/category/layout-animations"}},R={},g=[{value:"Reference",id:"reference",level:2},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],x=(N="InteractiveExample",function(e){return console.warn("Component "+N+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var N;const w={toc:g},_="wrapper";function S(e){let{components:t,...n}=e;return(0,o.kt)(_,(0,a.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useReducedMotion")," lets you query the reduced motion system setting. You can use it to disable animations."),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useReducedMotion } from 'react-native-reanimated';\n\nfunction App() {\n  const reduceMotion = useReducedMotion();\n\n  if (reduceMotion) {\n    // display static content \u2728\n  } else {\n    // run animations \u2728\n  }\n\n  // ...\n}\n")),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useReducedMotion")," returns a boolean indicating whether the reduced motion setting was enabled when the app started."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(x,{src:y,component:(0,o.kt)(h,{mdxType:"UseReducedMotion"}),mdxType:"InteractiveExample"}),(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Changing the reduced motion system setting doesn't cause your components to rerender."),(0,o.kt)("li",{parentName:"ul"},"In contrast to ",(0,o.kt)("a",{parentName:"li",href:"https://reactnative.dev/docs/accessibilityinfo#isreducemotionenabled"},(0,o.kt)("inlineCode",{parentName:"a"},"AccessibilityInfo.isReduceMotionEnabled()"))," the ",(0,o.kt)("inlineCode",{parentName:"li"},"useReducedMotion")," hook lets you get the value synchronously.")),(0,o.kt)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,o.kt)("div",{className:"compatibility"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Android"),(0,o.kt)("th",{parentName:"tr",align:null},"iOS"),(0,o.kt)("th",{parentName:"tr",align:null},"Web"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"))))))}S.isMDXComponent=!0},21739:(e,t,n)=>{n.d(t,{J:()=>i});const a=(0,n(83442).rP)();function i(){return a}}}]);